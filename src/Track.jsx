/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 --shadows --instance --transform ./track.glb 
Files: ./track.glb [34.38MB] > /Users/lunakepio/mario-kart-gpu/public/track-transformed.glb [1.8MB] (95%)
Author: Fortnite (https://sketchfab.com/jkimmel694)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/mario-kart-8-deluxe-snes-mario-circuit-3-71ba7c86cd7d475cb5e21a1c87243520
Title: Mario Kart 8 Deluxe - SNES Mario Circuit 3
*/

import React from 'react'
import { useGLTF } from '@react-three/drei'
import { RigidBody } from '@react-three/rapier'

export function Track(props) {
  const { nodes, materials } = useGLTF('/track-transformed.glb')
  return (
    <group {...props} dispose={null}
     position={[155, -28.4, 15]} scale={0.08}>
      {/*<RigidBody type='fixed' colliders={'trimesh'}>*/}
         <mesh castShadow receiveShadow geometry={nodes.Object_4.geometry} material={materials.material_0} />
         <mesh castShadow receiveShadow geometry={nodes.Object_6.geometry} material={materials.material_1} />
         <mesh castShadow receiveShadow geometry={nodes.Object_9.geometry} material={materials.material_4} />
         <mesh castShadow receiveShadow geometry={nodes.Object_10.geometry} material={materials.material_5} />
         <mesh castShadow receiveShadow geometry={nodes.Object_11.geometry} material={materials.material_6} />
         <mesh castShadow receiveShadow geometry={nodes.Object_12.geometry} material={materials.material_7} />
         <mesh castShadow receiveShadow geometry={nodes.Object_22.geometry} material={materials.material_16} />
         
         <mesh castShadow receiveShadow geometry={nodes.Object_25.geometry} material={materials.material_19} />
         <mesh castShadow receiveShadow geometry={nodes.Object_27.geometry} material={materials.material_21} />
       {/* </RigidBody> */}
      <mesh castShadow receiveShadow geometry={nodes.Object_24.geometry} material={materials.material_18} />
    </group>
  )
}

useGLTF.preload('/track-transformed.glb')
